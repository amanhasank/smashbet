{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5003/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me')\n};\n\n// Matches API calls\nexport const matchesAPI = {\n  getActiveMatches: () => api.get('/matches/active'),\n  getMatch: id => api.get(`/matches/${id}`),\n  createMatch: matchData => api.post('/matches', matchData),\n  closeBetting: matchId => api.post(`/matches/${matchId}/close-betting`),\n  declareWinner: (matchId, winnerId) => api.post(`/matches/${matchId}/declare-winner`, {\n    winnerId\n  })\n};\n\n// Bets API calls\nexport const betsAPI = {\n  placeBet: betData => api.post('/bets', betData),\n  getMyBets: () => api.get('/bets/my-bets'),\n  getBet: id => api.get(`/bets/${id}`)\n};\n\n// Admin API calls\nexport const adminAPI = {\n  createTeam: teamData => api.post('/admin/teams', teamData),\n  getTeams: () => api.get('/admin/teams'),\n  processPayouts: matchId => api.post(`/admin/matches/${matchId}/process-payouts`),\n  getUsers: () => api.get('/admin/users'),\n  updateUserBalance: (userId, amount) => api.post(`/admin/users/${userId}/balance`, {\n    amount\n  })\n};\n\n// User API calls\nexport const userAPI = {\n  updateProfile: userData => api.put('/users/profile', userData),\n  getBettingHistory: () => api.get('/users/betting-history'),\n  getBalanceHistory: () => api.get('/users/balance-history')\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","register","userData","post","login","credentials","getProfile","get","matchesAPI","getActiveMatches","getMatch","id","createMatch","matchData","closeBetting","matchId","declareWinner","winnerId","betsAPI","placeBet","betData","getMyBets","getBet","adminAPI","createTeam","teamData","getTeams","processPayouts","getUsers","updateUserBalance","userId","amount","userAPI","updateProfile","put","getBettingHistory","getBalanceHistory"],"sources":["/Users/amanhasan/Downloads/react-badminton-betting-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5003/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me'),\n};\n\n// Matches API calls\nexport const matchesAPI = {\n  getActiveMatches: () => api.get('/matches/active'),\n  getMatch: (id) => api.get(`/matches/${id}`),\n  createMatch: (matchData) => api.post('/matches', matchData),\n  closeBetting: (matchId) => api.post(`/matches/${matchId}/close-betting`),\n  declareWinner: (matchId, winnerId) => \n    api.post(`/matches/${matchId}/declare-winner`, { winnerId }),\n};\n\n// Bets API calls\nexport const betsAPI = {\n  placeBet: (betData) => api.post('/bets', betData),\n  getMyBets: () => api.get('/bets/my-bets'),\n  getBet: (id) => api.get(`/bets/${id}`),\n};\n\n// Admin API calls\nexport const adminAPI = {\n  createTeam: (teamData) => api.post('/admin/teams', teamData),\n  getTeams: () => api.get('/admin/teams'),\n  processPayouts: (matchId) => api.post(`/admin/matches/${matchId}/process-payouts`),\n  getUsers: () => api.get('/admin/users'),\n  updateUserBalance: (userId, amount) => \n    api.post(`/admin/users/${userId}/balance`, { amount }),\n};\n\n// User API calls\nexport const userAPI = {\n  updateProfile: (userData) => api.put('/users/profile', userData),\n  getBettingHistory: () => api.get('/users/betting-history'),\n  getBalanceHistory: () => api.get('/users/balance-history'),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}