{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Add a request interceptor to add the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me')\n};\n\n// Matches API calls\nexport const matchesAPI = {\n  getActiveMatches: () => api.get('/matches/active'),\n  getMatch: id => api.get(`/matches/${id}`),\n  createMatch: matchData => api.post('/matches', matchData),\n  closeBetting: matchId => api.post(`/matches/${matchId}/close-betting`),\n  declareWinner: (matchId, winnerId) => api.post(`/matches/${matchId}/declare-winner`, {\n    winnerId\n  })\n};\n\n// Bets API calls\nexport const betsAPI = {\n  placeBet: betData => api.post('/bets', betData),\n  getMyBets: () => api.get('/bets/my-bets'),\n  getBet: id => api.get(`/bets/${id}`)\n};\n\n// Admin API calls\nexport const adminAPI = {\n  createTeam: teamData => api.post('/admin/teams', teamData),\n  getTeams: () => api.get('/admin/teams'),\n  processPayouts: matchId => api.post(`/admin/matches/${matchId}/process-payouts`),\n  getUsers: () => api.get('/admin/users'),\n  updateUserBalance: (userId, amount) => api.post(`/admin/users/${userId}/balance`, {\n    amount\n  })\n};\n\n// User API calls\nexport const userAPI = {\n  updateProfile: userData => api.put('/users/profile', userData),\n  getBettingHistory: () => api.get('/users/betting-history'),\n  getBalanceHistory: () => api.get('/users/balance-history')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","response","use","error","_error$response","status","localStorage","removeItem","window","location","href","Promise","reject","request","config","token","getItem","Authorization","authAPI","register","userData","post","login","credentials","getProfile","get","matchesAPI","getActiveMatches","getMatch","id","createMatch","matchData","closeBetting","matchId","declareWinner","winnerId","betsAPI","placeBet","betData","getMyBets","getBet","adminAPI","createTeam","teamData","getTeams","processPayouts","getUsers","updateUserBalance","userId","amount","userAPI","updateProfile","put","getBettingHistory","getBalanceHistory"],"sources":["/Users/amanhasan/Downloads/react-badminton-betting-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Add a request interceptor to add the auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me'),\n};\n\n// Matches API calls\nexport const matchesAPI = {\n  getActiveMatches: () => api.get('/matches/active'),\n  getMatch: (id) => api.get(`/matches/${id}`),\n  createMatch: (matchData) => api.post('/matches', matchData),\n  closeBetting: (matchId) => api.post(`/matches/${matchId}/close-betting`),\n  declareWinner: (matchId, winnerId) => \n    api.post(`/matches/${matchId}/declare-winner`, { winnerId }),\n};\n\n// Bets API calls\nexport const betsAPI = {\n  placeBet: (betData) => api.post('/bets', betData),\n  getMyBets: () => api.get('/bets/my-bets'),\n  getBet: (id) => api.get(`/bets/${id}`),\n};\n\n// Admin API calls\nexport const adminAPI = {\n  createTeam: (teamData) => api.post('/admin/teams', teamData),\n  getTeams: () => api.get('/admin/teams'),\n  processPayouts: (matchId) => api.post(`/admin/matches/${matchId}/process-payouts`),\n  getUsers: () => api.get('/admin/users'),\n  updateUserBalance: (userId, amount) => \n    api.post(`/admin/users/${userId}/balance`, { amount }),\n};\n\n// User API calls\nexport const userAPI = {\n  updateProfile: (userData) => api.put('/users/profile', userData),\n  getBettingHistory: () => api.get('/users/betting-history'),\n  getBalanceHistory: () => api.get('/users/balance-history'),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}