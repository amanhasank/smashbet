{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://b100-14-195-8-190.ngrok-free.app/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false,\n  timeout: 10000\n});\n\n// Add a request interceptor to handle errors\napi.interceptors.response.use(response => {\n  var _response$headers$con;\n  // Ensure we're getting JSON data\n  if ((_response$headers$con = response.headers['content-type']) !== null && _response$headers$con !== void 0 && _response$headers$con.includes('application/json')) {\n    return response;\n  }\n  // If not JSON, try to parse it as JSON\n  try {\n    const jsonData = JSON.parse(response.data);\n    return {\n      ...response,\n      data: jsonData\n    };\n  } catch (e) {\n    console.error('Failed to parse response as JSON:', e);\n    return Promise.reject(new Error('Invalid response format'));\n  }\n}, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Add a request interceptor to add the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me')\n};\n\n// Matches API calls\nexport const matchesAPI = {\n  getActiveMatches: () => api.get('/matches/active'),\n  getMatch: id => api.get(`/matches/${id}`),\n  createMatch: matchData => api.post('/matches', matchData),\n  closeBetting: matchId => api.post(`/matches/${matchId}/close-betting`),\n  declareWinner: (matchId, winnerId) => api.post(`/matches/${matchId}/declare-winner`, {\n    winnerId\n  })\n};\n\n// Bets API calls\nexport const betsAPI = {\n  placeBet: betData => api.post('/bets', betData),\n  getMyBets: () => api.get('/bets/my-bets'),\n  getBet: id => api.get(`/bets/${id}`)\n};\n\n// Admin API calls\nexport const adminAPI = {\n  createTeam: teamData => api.post('/admin/teams', teamData),\n  getTeams: () => api.get('/admin/teams'),\n  processPayouts: matchId => api.post(`/admin/matches/${matchId}/process-payouts`),\n  getUsers: () => api.get('/admin/users'),\n  updateUserBalance: (userId, amount) => api.post(`/admin/users/${userId}/balance`, {\n    amount\n  })\n};\n\n// User API calls\nexport const userAPI = {\n  updateProfile: userData => api.put('/users/profile', userData),\n  getBettingHistory: () => api.get('/users/betting-history'),\n  getBalanceHistory: () => api.get('/users/balance-history'),\n  getLeaderboard: () => api.get('/users/leaderboard')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","timeout","interceptors","response","use","_response$headers$con","includes","jsonData","JSON","parse","data","e","console","error","Promise","reject","Error","_error$response","_error$response2","message","status","localStorage","removeItem","window","location","href","request","config","token","getItem","Authorization","authAPI","register","userData","post","login","credentials","getProfile","get","matchesAPI","getActiveMatches","getMatch","id","createMatch","matchData","closeBetting","matchId","declareWinner","winnerId","betsAPI","placeBet","betData","getMyBets","getBet","adminAPI","createTeam","teamData","getTeams","processPayouts","getUsers","updateUserBalance","userId","amount","userAPI","updateProfile","put","getBettingHistory","getBalanceHistory","getLeaderboard"],"sources":["/Users/amanhasan/Downloads/react-badminton-betting-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://b100-14-195-8-190.ngrok-free.app/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false,\n  timeout: 10000\n});\n\n// Add a request interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    // Ensure we're getting JSON data\n    if (response.headers['content-type']?.includes('application/json')) {\n      return response;\n    }\n    // If not JSON, try to parse it as JSON\n    try {\n      const jsonData = JSON.parse(response.data);\n      return { ...response, data: jsonData };\n    } catch (e) {\n      console.error('Failed to parse response as JSON:', e);\n      return Promise.reject(new Error('Invalid response format'));\n    }\n  },\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Add a request interceptor to add the auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/me'),\n};\n\n// Matches API calls\nexport const matchesAPI = {\n  getActiveMatches: () => api.get('/matches/active'),\n  getMatch: (id) => api.get(`/matches/${id}`),\n  createMatch: (matchData) => api.post('/matches', matchData),\n  closeBetting: (matchId) => api.post(`/matches/${matchId}/close-betting`),\n  declareWinner: (matchId, winnerId) => \n    api.post(`/matches/${matchId}/declare-winner`, { winnerId }),\n};\n\n// Bets API calls\nexport const betsAPI = {\n  placeBet: (betData) => api.post('/bets', betData),\n  getMyBets: () => api.get('/bets/my-bets'),\n  getBet: (id) => api.get(`/bets/${id}`),\n};\n\n// Admin API calls\nexport const adminAPI = {\n  createTeam: (teamData) => api.post('/admin/teams', teamData),\n  getTeams: () => api.get('/admin/teams'),\n  processPayouts: (matchId) => api.post(`/admin/matches/${matchId}/process-payouts`),\n  getUsers: () => api.get('/admin/users'),\n  updateUserBalance: (userId, amount) => \n    api.post(`/admin/users/${userId}/balance`, { amount }),\n};\n\n// User API calls\nexport const userAPI = {\n  updateProfile: (userData) => api.put('/users/profile', userData),\n  getBettingHistory: () => api.get('/users/betting-history'),\n  getBalanceHistory: () => api.get('/users/balance-history'),\n  getLeaderboard: () => api.get('/users/leaderboard')\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}